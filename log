==17147== Memcheck, a memory error detector
==17147== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17147== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==17147== Command: ./asm/asm tst.s
==17147== Parent PID: 9860
==17147== 
==17147== Use of uninitialised value of size 8
==17147==    at 0x402F01: get_place (check_parse.c:17)
==17147==    by 0x403FCE: run_label (fill_inst.c:50)
==17147==    by 0x40405A: fill_labels (fill_inst.c:69)
==17147==    by 0x401327: main (main.c:104)
==17147==  Uninitialised value was created by a stack allocation
==17147==    at 0x402EE3: get_place (check_parse.c:14)
==17147== 
==17147== Use of uninitialised value of size 8
==17147==    at 0x402F1D: get_place (check_parse.c:19)
==17147==    by 0x403FCE: run_label (fill_inst.c:50)
==17147==    by 0x40405A: fill_labels (fill_inst.c:69)
==17147==    by 0x401327: main (main.c:104)
==17147==  Uninitialised value was created by a stack allocation
==17147==    at 0x402EE3: get_place (check_parse.c:14)
==17147== 
==17147== 
==17147== HEAP SUMMARY:
==17147==     in use at exit: 25,197 bytes in 489 blocks
==17147==   total heap usage: 504 allocs, 15 frees, 27,342 bytes allocated
==17147== 
==17147== LEAK SUMMARY:
==17147==    definitely lost: 8,538 bytes in 69 blocks
==17147==    indirectly lost: 16,659 bytes in 420 blocks
==17147==      possibly lost: 0 bytes in 0 blocks
==17147==    still reachable: 0 bytes in 0 blocks
==17147==         suppressed: 0 bytes in 0 blocks
==17147== Rerun with --leak-check=full to see details of leaked memory
==17147== 
==17147== For counts of detected and suppressed errors, rerun with: -v
==17147== ERROR SUMMARY: 16 errors from 2 contexts (suppressed: 0 from 0)
