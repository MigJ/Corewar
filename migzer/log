==13678== Memcheck, a memory error detector
==13678== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13678== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==13678== Command: ./asm
==13678== Parent PID: 9609
==13678== 
==13678== Conditional jump or move depends on uninitialised value(s)
==13678==    at 0x4C2DB3C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13678==    by 0x40200A: my_memset (utils.c:95)
==13678==    by 0x400C2A: ret_content (convert.c:56)
==13678==    by 0x4019FB: main (header.c:86)
==13678==  Uninitialised value was created by a stack allocation
==13678==    at 0x401A03: ret_params_size (size_calc.c:16)
==13678== 
==13678== Conditional jump or move depends on uninitialised value(s)
==13678==    at 0x402040: my_memset (utils.c:98)
==13678==    by 0x400C2A: ret_content (convert.c:56)
==13678==    by 0x4019FB: main (header.c:86)
==13678==  Uninitialised value was created by a stack allocation
==13678==    at 0x401A03: ret_params_size (size_calc.c:16)
==13678== 
==13678== Invalid read of size 1
==13678==    at 0x400BD9: int_to_char (convert.c:43)
==13678==    by 0x400D88: ret_content (convert.c:67)
==13678==    by 0x4019FB: main (header.c:86)
==13678==  Address 0x550ddc3 is 0 bytes after a block of size 3 alloc'd
==13678==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13678==    by 0x40200A: my_memset (utils.c:95)
==13678==    by 0x400B70: int_to_char (convert.c:35)
==13678==    by 0x400D88: ret_content (convert.c:67)
==13678==    by 0x4019FB: main (header.c:86)
==13678== 
==13678== Syscall param write(count) contains uninitialised byte(s)
==13678==    at 0x52396E0: __write_nocancel (syscall-template.S:84)
==13678==    by 0x400DF0: ret_content (convert.c:72)
==13678==    by 0x4019FB: main (header.c:86)
==13678==  Uninitialised value was created by a stack allocation
==13678==    at 0x401A03: ret_params_size (size_calc.c:16)
==13678== 
==13678== 
==13678== HEAP SUMMARY:
==13678==     in use at exit: 4,409 bytes in 96 blocks
==13678==   total heap usage: 96 allocs, 0 frees, 4,409 bytes allocated
==13678== 
==13678== LEAK SUMMARY:
==13678==    definitely lost: 929 bytes in 9 blocks
==13678==    indirectly lost: 3,480 bytes in 87 blocks
==13678==      possibly lost: 0 bytes in 0 blocks
==13678==    still reachable: 0 bytes in 0 blocks
==13678==         suppressed: 0 bytes in 0 blocks
==13678== Rerun with --leak-check=full to see details of leaked memory
==13678== 
==13678== For counts of detected and suppressed errors, rerun with: -v
==13678== ERROR SUMMARY: 10 errors from 4 contexts (suppressed: 0 from 0)
